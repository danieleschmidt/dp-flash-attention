version: '3.8'

services:
  dp-flash-attention:
    build: .
    image: dp-flash-attention:latest
    container_name: dp-flash-attention-prod
    restart: unless-stopped
    
    environment:
      - DP_FLASH_ATTENTION_LOG_LEVEL=INFO
      - DP_FLASH_ATTENTION_SECURITY_MODE=strict
      - DP_FLASH_ATTENTION_PRIVACY_BUDGET=1.0
      - DP_FLASH_ATTENTION_MAX_WORKERS=4
    
    ports:
      - "8080:8080"  # Main API
      - "8081:8081"  # Metrics/Health
    
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data:ro
      - ./config:/app/config:ro
    
    deploy:
      resources:
        limits:
          cpus: '4.0'
          memory: 8G
        reservations:
          cpus: '2.0'  
          memory: 4G
    
    healthcheck:
      test: ["CMD", "python3", "-c", "from dp_flash_attention.utils import health_check; health_check()"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    security_opt:
      - no-new-privileges:true
    
    networks:
      - dp-network

  # Redis for caching (if needed)
  redis:
    image: redis:7-alpine
    container_name: dp-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - dp-network
    command: redis-server --appendonly yes

  # Prometheus for monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: dp-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    networks:
      - dp-network

volumes:
  redis-data:
  prometheus-data:

networks:
  dp-network:
    driver: bridge
