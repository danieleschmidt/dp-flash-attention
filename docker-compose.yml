version: '3.8'

services:
  dp-flash-attention:
    build: .
    image: dp-flash-attention:latest
    container_name: dp-flash-attention-production
    restart: unless-stopped
    environment:
      - ENVIRONMENT=production
      - PYTHONUNBUFFERED=1
    ports:
      - "8000:8000"
      - "9090:9090"
    volumes:
      - ./logs:/app/logs
      - ./config:/app/config:ro
    networks:
      - dp-flash-network
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /app/tmp:size=100M
    deploy:
      resources:
        limits:
          cpus: '4.0'
          memory: 8Gi
        reservations:
          cpus: '1.0'
          memory: 2Gi
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus-production
    restart: unless-stopped
    ports:
      - "9091:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - dp-flash-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana-production
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - dp-flash-network

networks:
  dp-flash-network:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data: